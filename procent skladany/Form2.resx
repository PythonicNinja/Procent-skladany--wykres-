<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/2wBDAAkGBwgHBgkIBwgKCgkLDRYPDQwMDRsUFRAWIB0iIiAdHx8k
        KDQsJCYxJx8fLT0tMTU3Ojo6Iys/RD84QzQ5Ojf/2wBDAQoKCg0MDRoPDxo3JR8lNzc3Nzc3Nzc3Nzc3
        Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzf/wAARCAAZAGUDASIAAhEBAxEB/8QA
        GwAAAgMBAQEAAAAAAAAAAAAAAwUCBAYABwH/xAAyEAABAwMCBAQEBQUAAAAAAAABAgMEAAUREiETMUFx
        BiJRYRQygcElkaGx0TRCUnKC/8QAGQEAAgMBAAAAAAAAAAAAAAAAAgQAAQMF/8QAIhEAAQQBBAIDAAAA
        AAAAAAAAAQACAxEEEhMhMVGhBRRB/9oADAMBAAIRAxEAPwBs0ywkFwoAQANiTtTGHCYlRwsICSrOAM55
        96y17nCPdIzC3lBlxKVbjON8ZOOYFaJc5NpZ4bSw9qTlvUeRPXbp1rgZEMzI2vjHZQ4MTZptsi+EGUYk
        JKUuNhbhG4ycj9aBElQJ0j4ZKOE8DsnOyxg7D3pLMlPSZBSklx9w7miX6xIiQWXo0pSZGQpROxJ/yHUY
        prGZE92mY1Y9pz5LEixIAGC336Ta5yolrebbfiag40taSlR3UnGlHPmonA98etAanwHWi6qO4R5QpKPM
        lBVnAzkE8ifTAofiK5zbfZrFeeIFsNutCeFNoOttWMnltuOnU0TxJJUjxNCg2tbUcNQ3pkt9DCFqS0kH
        SBkdVemM5qCJpHS5wYKUPjrSpYbMZ7iKA0oCcKJOMAZVgnCgfYc8UKDIjTnFttQVlIGpLqjspOSASMjG
        4NfIV8s8azWxh6JIukt+HxlCPb0FfD1HzKSNgMjlnpmm7dytrz104DK0LtqR8QeGBsUleE+vI+m9ZyRA
        DpUYwlrkFpS0gNaDq30k4IwfXtREQ0Y/pkfmr+ahIvkL4OHKZh3SSmQ18QlMeOFlCN91YwAdj1NV2Lkm
        f4rspgSXFW+Vb3XgjkFEEjJGOYxil/rONkikAiV9EFGoqDe23lJO3P8AijJgtnALAAO2UqOR+ZpVJeul
        68QzrdZpogRIGhMiTwwtxxwjOlIOwA33od7nXTw9DtzEi5syXnZqSZDyw0S3keQoQkqUOeSPb1qxi2QL
        FlEI03TDCEpy0lRIBJJPUexrqp+CHJlw8PRnXpKVFKdIK46kk/8AS/n7jauoH4+lxCmhHm2xq5tHiLGt
        OC2vTgg+nalzVtuRQiOGCk6tJcUoaQM9+VPY/wAp7j71db5p700Mh5jER6u1riTux5DIzsikvt9patjg
        dSFvqUgZOMkH17VKREM6UFPNqDIKQUnmef6Dr61f/tb7D9hUeo7/AGNLhg3dz9RS5UkrND+VC7w27rZp
        duWAEPslA2HlONj9Dis14Us92Ztl3lXpH4lJipiNJyCeGhvSnf3P7VrGudFPJX0+9MNlcAWrIOIC85lW
        O6ptVoZiWmU1dosRDbc+PMS3wlaiSlY6gA529avriX+BNvzbNtRNF3ZQRJS6lCUL4ZSrIPc4A9vpuE/M
        nv8Aeo9E9hRmc+Feorzw2W+iPbIcm3yJcRu3JZTHam8FDT+TlTmD5hirnhSwXS3zfD7kuKW0xID7Tx1J
        OlSnFEDnvsRW7Z+Yd/tUzyoXZDiKpXqWKkRL3YfEM+42mCm4wriUreYDgQttwAjIzt6/nTOOl+7RmHrx
        C+BfZkB1ltKwsp0/KSoe5OR2rQ9FfSqrnTvWTpSa458qiVUt6WoEJmMxlDTaAEJG+Bzxk966uHyI/wBR
        +1dWJebQ2v/Z
</value>
  </data>
</root>